{"version":3,"sources":["images/book150.png","components/Navbar.js","components/Jumbotron.js","components/Container.js","utils/API.js","components/Card.js","components/pages/Search.js","components/Savedcard.js","components/pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","Jumbotron","Container","props","children","query","axios","get","savedBooks","post","id","delete","Card","prop","image","data","imageLinks","thumbnail","Book150","card","title","authors","description","link","previewLink","publishedDate","rating","averageRating","categories","pageCount","src","alt","type","target","rel","onClick","API","then","res","console","log","catch","err","Search","useState","books","setBooks","searchObject","setSearchObject","loadBooks","search","response","items","useEffect","onSubmit","e","preventDefault","placeholder","onChange","value","map","book","volumeInfo","key","Savedcard","_id","window","location","reload","Saved","setSavedBooks","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.67560408.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book150.6c3e143f.png\";","import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <ul className=\"nav\">\n        <li className=\"nav-item active\">\n          <a className=\"nav-link\" href=\"/\">Search</a>\n        </li>\n        <p>  |  </p>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/saved\">Saved</a>\n        </li>\n      </ul>\n    </nav>\n  )\n};\n\nexport default Navbar;","import React from \"react\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid col-lg-8\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Google Books Search</h1>\n        <p className=\"lead\">Search for books then save the ones you might be interested in.</p>\n      </div>\n    </div>\n  )\n};\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction Container(props) {\n  return (\n    <div className=\"row justify-content-lg-center main-container\">\n      {props.children}\n    </div>\n  )\n}\n\nexport default Container;\n","import axios from \"axios\"\n\nexport default {\n    getGoogle: function (query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n    },\n\n    getBook: function (id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    saveBook: function (savedBooks) {\n        return axios.post(\"/api/books/\", savedBooks);\n    },\n\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n\n}\n","import React from \"react\";\nimport API from \"../utils/API\";\nimport Book150 from \"../images/book150.png\"\n\nfunction Card(prop) {\n  let props = prop.data;\n  let image;\n\n  if (props.imageLinks) {\n    image = props.imageLinks.thumbnail\n  }\n  else {\n    image = Book150\n  }\n\n  let card = {\n    title: props.title,\n    authors: props.authors,\n    description: props.description,\n    image: image,\n    link: props.previewLink,\n    publishedDate: props.publishedDate,\n    rating: props.averageRating,\n    categories: props.categories,\n    pageCount: props.pageCount\n  }\n\n  function addCard() {\n    API.saveBook(card)\n      .then(res => console.log(res))\n      .catch(err => console.log(err))\n  }\n  return (\n    <div className=\"card col-lg-8\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title row\">{props.title}</h2>\n        <h4 className=\"card-text row\">Authors: {props.authors}</h4>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-auto\">\n              <img src={image} className=\"card-img-left\" alt={props.title} />\n              <br />\n              <a type=\"button\" href={props.previewLink} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-secondary\">View</a>\n              <button className=\"btn btn-success\" onClick={() => addCard()}>Add</button>\n            </div>\n            <br />\n            <div className=\"col-lg-auto\">\n              <p className=\"card-text\">Description: {props.description}</p>\n              <br />\n              <p className=\"card-text\">Pages: {props.pageCount}</p>\n              <br />\n              <p className=\"card-text\">Rating: {props.averageRating}</p>\n              <br />\n              <p className=\"card-text\">Published: {props.publishedDate}</p>\n              <br />\n              <p className=\"card-text\">Category: {props.categories}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Navbar from \"../Navbar.js\";\nimport Jumbotron from \"../Jumbotron.js\";\nimport Container from \"../Container.js\"\nimport Card from \"../Card\"\nimport API from \"../../utils/API\";\n\nconst Search = () => {\n  const [books, setBooks] = useState([]);\n  const [searchObject, setSearchObject] = useState({});\n\n  useEffect(() => {\n    loadBooks(\"Cosmere\");\n  }, []);\n\n  function loadBooks(search) {\n    API.getGoogle(search)\n      .then((response) => {\n        setBooks(response.data.items);\n      }).catch(err => console.log(err));\n  }\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    loadBooks(searchObject);\n    setSearchObject(\"\");\n  }\n\n  return (\n    <div className=\"search\">\n      <Navbar />\n      <Container>\n        <Jumbotron />\n      </Container>\n      <Container>\n        <form className=\"col-lg-8\" onSubmit={handleSubmit}>\n          <input className=\"form-control form-control-lg\" type=\"search\" placeholder=\"Search For Books Here\" onChange={(e) => setSearchObject(e.target.value)} />\n        </form>\n      </Container>\n      <br />\n      <Container>\n        {books.map(book => {\n          return (\n            <Card data={book.volumeInfo} key={book.id} />\n          )\n        })}\n      </Container>\n    </div>\n  );\n}\n\nexport default Search;","import React from \"react\";\nimport API from \"../utils/API\";\n\nfunction Savedcard(prop) {\n  let props = prop.data;\n  function deleteIt(id) {\n    API.deleteBook(id)\n      .then(res => {\n        window.location.reload();\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title\">{props.title}</h2>\n        <p className=\"card-text\">Authors: {props.authors}</p>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-3\">\n              <img src={props.image} className=\"card-img-left\" alt={props.title} />\n              <br />\n              <a type=\"button\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-secondary\">View</a>\n              <button className=\"btn btn-danger\" id={props._id} onClick={() => deleteIt(props._id)}>Delete</button>\n              <br />\n            </div>\n            <div className=\"col-lg-8\">\n              <p className=\"card-text\">Description: {props.description}</p>\n              <br />\n              <p className=\"card-text\">Pages: {props.pageCount}</p>\n              <br />\n              <p className=\"card-text\">Rating: {props.rating}</p>\n              <br />\n              <p className=\"card-text\">Published: {props.publishedDate}</p>\n              <br />\n              <p className=\"card-text\">Category: {props.categories}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Savedcard;","import React, { useState, useEffect } from 'react';\nimport Navbar from \"../Navbar.js\";\nimport Jumbotron from \"../Jumbotron.js\";\nimport Container from \"../Container.js\"\nimport SavedCard from \"../Savedcard.js\";\nimport API from \"../../utils/API\";\n\nfunction Saved() {\n  const [savedBooks, setSavedBooks] = useState([]);\n\n  useEffect(() => {\n    loadBooks();\n  }, []);\n\n  function loadBooks() {\n    API.getBooks()\n      .then((response) => {\n        setSavedBooks(response.data);\n      }).catch(err => console.log(err));\n  }\n\n  return (\n    <div className=\"saved\">\n      <Navbar />\n      <Container>\n        <Jumbotron />\n        {savedBooks.map(book => {\n          return (\n            <SavedCard data={book} key={book._id} />\n          )\n        })}\n      </Container>\n    </div>\n  );\n}\n\nexport default Saved;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from './components/pages/Search';\nimport Saved from './components/pages/Saved';\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path={process.env.PUBLIC_URL + \"/\"} component={Search} />\n          <Route exact path={process.env.PUBLIC_URL + \"/saved\"} component={Saved} />\n          <Route path={process.env.PUBLIC_URL + \"*\"} component={Search} />\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}